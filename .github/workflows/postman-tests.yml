name: Run Postman Tests

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Python dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt

      - name: Set environment variables
        run: |
          echo "API_KEY=${{ secrets.API_KEY }}" >> $GITHUB_ENV
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> $GITHUB_ENV
          echo "ALGORITHM=${{ secrets.ALGORITHM }}" >> $GITHUB_ENV
          echo "ACCESS_TOKEN_EXPIRE_MINUTES=${{ secrets.ACCESS_TOKEN_EXPIRE_MINUTES }}" >> $GITHUB_ENV
          echo "MONGO_URI=${{ secrets.MONGO_URI }}" >> $GITHUB_ENV
          echo "MONGO_DATABASE=${{ secrets.MONGO_DATABASE }}" >> $GITHUB_ENV
          echo "POSTGRES_URI=${{ secrets.POSTGRES_URI }}" >> $GITHUB_ENV
          echo "CLOUDINARY_NAME=${{ secrets.CLOUDINARY_NAME }}" >> $GITHUB_ENV
          echo "CLOUDINARY_API_KEY=${{ secrets.CLOUDINARY_API_KEY }}" >> $GITHUB_ENV
          echo "CLOUDINARY_API_SECRET=${{ secrets.CLOUDINARY_API_SECRET }}" >> $GITHUB_ENV
          echo "CLOUDINARY_FOLDER=${{ secrets.CLOUDINARY_FOLDER }}" >> $GITHUB_ENV
          echo "CLOUDINARY_DEFAULT_URL=${{ secrets.CLOUDINARY_DEFAULT_URL }}" >> $GITHUB_ENV
          echo "REDIS_HOST=${{ secrets.REDIS_HOST }}" >> $GITHUB_ENV
          echo "REDIS_PORT=${{ secrets.REDIS_PORT }}" >> $GITHUB_ENV
          echo "REDIS_USERNAME=${{ secrets.REDIS_USERNAME }}" >> $GITHUB_ENV
          echo "REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }}" >> $GITHUB_ENV
          echo "APP_HOST=http://localhost:8000/" >> $GITHUB_ENV

      - name: Start Docker containers (FastAPI + DBs)
        run: |
          docker-compose up -d

      - name: Wait for FastAPI to be ready
        run: |
          for i in {1..30}; do
            curl -s http://localhost:8000/docs > /dev/null && echo "API is up!" && break
            echo "Waiting for API..."
            sleep 2
          done

      - name: Install Newman with HTML reporter
        run: npm install -g newman newman-reporter-html

      - name: Run Postman tests and generate HTML report
        run: |
          newman run tests/EloDrinksBackend_Collection_Tests.postman_collection.json \
            -e tests/local.postman_environment.json \
            --reporters cli,html \
            --reporter-html-export tests/reports/report.html

      - name: Upload HTML report as an artifact
        uses: actions/upload-artifact@v4
        with:
          name: postman-report
          path: tests/reports/report.html
